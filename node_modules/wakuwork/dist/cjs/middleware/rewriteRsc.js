"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:true,get:all[name]})}_export(exports,{generatePrefetchCode:()=>generatePrefetchCode,transformRsfId:()=>transformRsfId,default:()=>_default});const _nodeBuffer=require("node:buffer");const _nodeStream=require("node:stream");const generatePrefetchCode=(entryItemsIterable,moduleIds)=>{const entryItems=Array.from(entryItemsIterable);let code="";if(entryItems.length){const rscIds=[...new Set(entryItems.map(([rscId])=>rscId))];code+="if (!globalThis.__WAKUWORK_PREFETCHED__) {";code+=`
globalThis.__WAKUWORK_PREFETCHED__ = {
${rscIds.map(rscId=>{const value="{"+entryItems.flatMap(([id,props])=>{if(id!==rscId)return[];const serializedProps=JSON.stringify(props);const searchParams=new URLSearchParams;searchParams.set("props",serializedProps);return[`'${serializedProps}': fetch('/RSC/${rscId}/${searchParams}')`]}).join(",")+"}";return`  '${rscId}': ${value}`}).join(",\n")}
};`}for(const moduleId of moduleIds){code+=`
import('${moduleId}');`}code+="}";return code};const transformRsfId=(prefixToRemove,convert=id=>id)=>new _nodeStream.Transform({transform(chunk,encoding,callback){if(encoding!=="buffer"){throw new Error("Unknown encoding")}const data=chunk.toString();const lines=data.split("\n");let changed=false;for(let i=0;i<lines.length;++i){const match=lines[i].match(new RegExp(`^([0-9]+):{"id":"${prefixToRemove}(.*?)"(.*)$`));if(match){lines[i]=`${match[1]}:{"id":"${convert(match[2])}"${match[3]}`;changed=true}}callback(null,changed?_nodeBuffer.Buffer.from(lines.join("\n")):chunk)}});const rewriteRsc=(_config,shared)=>{shared.generatePrefetchCode=generatePrefetchCode;return async(req,_res,next)=>{const url=new URL(req.url||"","http://"+req.headers.host);if(url.pathname.startsWith("/RSC/")){const index=url.pathname.lastIndexOf("/");const rscId=url.pathname.slice("/RSC/".length,index);const params=new URLSearchParams(url.pathname.slice(index+1));if(rscId&&rscId!=="_"){req.headers["x-react-server-component-id"]=rscId;req.headers["x-react-server-component-props"]=params.get("props")||undefined}const rsfId=params.get("action_id");if(rsfId){req.headers["x-react-server-function-id"]=rsfId;req.headers["x-react-server-function-name"]=params.get("action_name")||"default"}}await next()}};const _default=rewriteRsc;