"use strict";Object.defineProperty(exports,"__esModule",{value:true});Object.defineProperty(exports,"default",{enumerable:true,get:()=>_default});const _nodePath=_interopRequireDefault(require("node:path"));const _react=require("react");const _server=_interopRequireDefault(require("react-server-dom-webpack/server"));const _busboy=_interopRequireDefault(require("busboy"));const _rewriteRscJs=require("./rewriteRsc.js");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap;var cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj}}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj)}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc)}else{newObj[key]=obj[key]}}}newObj.default=obj;if(cache){cache.set(obj,newObj)}return newObj}const{renderToPipeableStream,decodeReply,decodeReplyFromBusboy}=_server.default;const CLIENT_REFERENCE=Symbol.for("react.client.reference");const rscPrd=(config,shared)=>{const dir=_nodePath.default.resolve(config.prdServer?.dir||".");const basePath=config.build?.basePath||"/";const entriesFile=_nodePath.default.join(dir,config.files?.entriesJs||"entries.js");const getEntry=async rscId=>{const mod=await Promise.resolve(entriesFile).then(p=>_interopRequireWildcard(require(p)));return mod.getEntry(rscId)};const prefetcher=async pathItem=>{const mod=await Promise.resolve(entriesFile).then(p=>_interopRequireWildcard(require(p)));return mod?.prefetcher(pathItem)??{}};let clientEntries;let serverEntries;Promise.resolve(entriesFile).then(p=>_interopRequireWildcard(require(p))).then(mod=>{clientEntries=mod.clientEntries;serverEntries=mod.serverEntries});const getFunctionComponent=async rscId=>{const mod=await getEntry(rscId);if(typeof mod==="function"){return mod}return mod.default};const getClientEntry=id=>{if(!clientEntries){throw new Error("Missing client entries")}const clientEntry=clientEntries[id]||clientEntries[id.replace(/\.js$/,".ts")]||clientEntries[id.replace(/\.js$/,".tsx")]||clientEntries[id.replace(/\.js$/,".jsx")];if(!clientEntry){throw new Error("No client entry found")}return clientEntry};const decodeId=encodedId=>{let[id,name]=encodedId.split("#");if(!id.startsWith("wakuwork/")){id=_nodePath.default.relative("file://"+encodeURI(dir),id);id=basePath+getClientEntry(decodeURI(id))}return[id,name]};const registerServerEntry=fileId=>{if(!serverEntries){throw new Error("Missing server entries")}for(const entry of Object.entries(serverEntries)){if(entry[1]===fileId){return entry[0]}}const id=`rsf${Object.keys(serverEntries).length}`;serverEntries[id]=fileId;return id};const getServerEntry=id=>{if(!serverEntries){throw new Error("Missing server entries")}const fileId=serverEntries[id];if(!fileId){throw new Error("No server entry found")}return fileId};shared.prdScriptToInject=async path=>{let code="";if(prefetcher){const{entryItems=[],clientModules=[]}=await prefetcher(path);const moduleIds=[];for(const m of clientModules){if(m["$$typeof"]!==CLIENT_REFERENCE){throw new Error("clientModules must be client references")}const[id]=decodeId(m["$$id"]);moduleIds.push(id)}code+=shared.generatePrefetchCode?.(entryItems,moduleIds)||""}return code};const bundlerConfig=new Proxy({},{get(_target,encodedId){const[id,name]=decodeId(encodedId);return{id,chunks:[],name,async:true}}});return async(req,res,next)=>{const rscId=req.headers["x-react-server-component-id"];const rsfId=req.headers["x-react-server-function-id"];if(typeof rsfId==="string"){const[id,name]=getServerEntry(rsfId).split("#");const fname=_nodePath.default.join(dir,id);let args=[];if(req.headers["content-type"]?.startsWith("multipart/form-data")){const bb=(0,_busboy.default)({headers:req.headers});const reply=decodeReplyFromBusboy(bb);req.pipe(bb);args=await reply}else{let body="";for await(const chunk of req){body+=chunk}if(body){args=await decodeReply(body)}}const mod=await Promise.resolve(fname).then(p=>_interopRequireWildcard(require(p)));const data=await (mod[name]||mod)(...args);if(typeof rscId!=="string"){res.setHeader("Content-Type","text/x-component");renderToPipeableStream(data,bundlerConfig).pipe(res);return}}if(typeof rscId==="string"){let body="";for await(const chunk of req){body+=chunk}const props=JSON.parse(body||req.headers["x-react-server-component-props"]||"{}");const component=await getFunctionComponent(rscId);if(component){res.setHeader("Content-Type","text/x-component");renderToPipeableStream((0,_react.createElement)(component,props),bundlerConfig).pipe((0,_rewriteRscJs.transformRsfId)("file://"+encodeURI(dir),registerServerEntry)).pipe(res);return}res.statusCode=404;res.end()}await next()}};const _default=rscPrd;